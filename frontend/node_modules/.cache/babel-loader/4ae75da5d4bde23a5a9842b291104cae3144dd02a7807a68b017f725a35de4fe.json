{"ast":null,"code":"var _jsxFileName = \"/usr/angela/popmart_exchange/frontend/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport ChatBox from './components/ChatBox';\nimport ResultPanel from './components/ResultPanel';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [searchResult, setSearchResult] = useState(null);\n  const [isPosting, setIsPosting] = useState(false);\n  const handleSearch = async query => {\n    // TODO: Implement API call to backend\n    const response = await fetch('/api/search', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        query\n      })\n    });\n    const data = await response.json();\n    if (data.found) {\n      setSearchResult(data.pokemon);\n    } else {\n      setIsPosting(true);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex h-screen\",\n    children: [/*#__PURE__*/_jsxDEV(ResultPanel, {\n      result: searchResult,\n      isPosting: isPosting\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ChatBox, {\n      onSearch: handleSearch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"iLo1Kye6r6w6SMewcCk/B/ougjA=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","ChatBox","ResultPanel","jsxDEV","_jsxDEV","App","_s","searchResult","setSearchResult","isPosting","setIsPosting","handleSearch","query","response","fetch","method","headers","body","JSON","stringify","data","json","found","pokemon","className","children","result","fileName","_jsxFileName","lineNumber","columnNumber","onSearch","_c","$RefreshReg$"],"sources":["/usr/angela/popmart_exchange/frontend/src/App.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport ChatBox from './components/ChatBox';\nimport ResultPanel from './components/ResultPanel';\nimport { Pokemon } from './types/Pokemon';\n\nconst App: React.FC = () => {\n  const [searchResult, setSearchResult] = useState<Pokemon | null>(null);\n  const [isPosting, setIsPosting] = useState<boolean>(false);\n\n  const handleSearch = async (query: string) => {\n    // TODO: Implement API call to backend\n    const response = await fetch('/api/search', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({ query }),\n    });\n    const data = await response.json();\n    if (data.found) {\n      setSearchResult(data.pokemon);\n    } else {\n      setIsPosting(true);\n    }\n  };\n\n  return (\n    <div className=\"flex h-screen\">\n      <ResultPanel result={searchResult} isPosting={isPosting} />\n      <ChatBox onSearch={handleSearch} />\n    </div>\n  );\n};\n\nexport default App;\n\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,OAAO,MAAM,sBAAsB;AAC1C,OAAOC,WAAW,MAAM,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGnD,MAAMC,GAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGR,QAAQ,CAAiB,IAAI,CAAC;EACtE,MAAM,CAACS,SAAS,EAAEC,YAAY,CAAC,GAAGV,QAAQ,CAAU,KAAK,CAAC;EAE1D,MAAMW,YAAY,GAAG,MAAOC,KAAa,IAAK;IAC5C;IACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,aAAa,EAAE;MAC1CC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAEP;MAAM,CAAC;IAChC,CAAC,CAAC;IACF,MAAMQ,IAAI,GAAG,MAAMP,QAAQ,CAACQ,IAAI,CAAC,CAAC;IAClC,IAAID,IAAI,CAACE,KAAK,EAAE;MACdd,eAAe,CAACY,IAAI,CAACG,OAAO,CAAC;IAC/B,CAAC,MAAM;MACLb,YAAY,CAAC,IAAI,CAAC;IACpB;EACF,CAAC;EAED,oBACEN,OAAA;IAAKoB,SAAS,EAAC,eAAe;IAAAC,QAAA,gBAC5BrB,OAAA,CAACF,WAAW;MAACwB,MAAM,EAAEnB,YAAa;MAACE,SAAS,EAAEA;IAAU;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC3D1B,OAAA,CAACH,OAAO;MAAC8B,QAAQ,EAAEpB;IAAa;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAChC,CAAC;AAEV,CAAC;AAACxB,EAAA,CA3BID,GAAa;AAAA2B,EAAA,GAAb3B,GAAa;AA6BnB,eAAeA,GAAG;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}