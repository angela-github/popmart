{"ast":null,"code":"var _jsxFileName = \"/usr/angela/popmart_exchange/frontend/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport ChatBox from './components/ChatBox';\nimport ResultPanel from './components/ResultPanel';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [searchResult, setSearchResult] = useState(null);\n  const [isPosting, setIsPosting] = useState(false);\n  const handleSearch = async query => {\n    try {\n      const response = await fetch('http://localhost:8880/api/search', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          query\n        })\n      });\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      const data = await response.json();\n      if (data.found) {\n        setSearchResult(data.pokemon);\n      } else {\n        setIsPosting(true);\n      }\n    } catch (error) {\n      console.error('Error:', error);\n      // Handle the error appropriately (e.g., show an error message to the user)\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex h-screen\",\n    children: [/*#__PURE__*/_jsxDEV(ResultPanel, {\n      result: searchResult,\n      isPosting: isPosting\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ChatBox, {\n      onSearch: handleSearch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"iLo1Kye6r6w6SMewcCk/B/ougjA=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","ChatBox","ResultPanel","jsxDEV","_jsxDEV","App","_s","searchResult","setSearchResult","isPosting","setIsPosting","handleSearch","query","response","fetch","method","headers","body","JSON","stringify","ok","Error","status","data","json","found","pokemon","error","console","className","children","result","fileName","_jsxFileName","lineNumber","columnNumber","onSearch","_c","$RefreshReg$"],"sources":["/usr/angela/popmart_exchange/frontend/src/App.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport ChatBox from './components/ChatBox';\nimport ResultPanel from './components/ResultPanel';\nimport { Pokemon } from './types/Pokemon';\n\nconst App: React.FC = () => {\n  const [searchResult, setSearchResult] = useState<Pokemon | null>(null);\n  const [isPosting, setIsPosting] = useState<boolean>(false);\n\n  const handleSearch = async (query: string) => {\n    try {\n      const response = await fetch('http://localhost:8880/api/search', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ query }),\n      });\n      \n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      \n      const data = await response.json();\n      if (data.found) {\n        setSearchResult(data.pokemon);\n      } else {\n        setIsPosting(true);\n      }\n    } catch (error) {\n      console.error('Error:', error);\n      // Handle the error appropriately (e.g., show an error message to the user)\n    }\n  };\n\n  return (\n    <div className=\"flex h-screen\">\n      <ResultPanel result={searchResult} isPosting={isPosting} />\n      <ChatBox onSearch={handleSearch} />\n    </div>\n  );\n};\n\nexport default App;\n\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,OAAO,MAAM,sBAAsB;AAC1C,OAAOC,WAAW,MAAM,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGnD,MAAMC,GAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGR,QAAQ,CAAiB,IAAI,CAAC;EACtE,MAAM,CAACS,SAAS,EAAEC,YAAY,CAAC,GAAGV,QAAQ,CAAU,KAAK,CAAC;EAE1D,MAAMW,YAAY,GAAG,MAAOC,KAAa,IAAK;IAC5C,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,kCAAkC,EAAE;QAC/DC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAEP;QAAM,CAAC;MAChC,CAAC,CAAC;MAEF,IAAI,CAACC,QAAQ,CAACO,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,uBAAuBR,QAAQ,CAACS,MAAM,EAAE,CAAC;MAC3D;MAEA,MAAMC,IAAI,GAAG,MAAMV,QAAQ,CAACW,IAAI,CAAC,CAAC;MAClC,IAAID,IAAI,CAACE,KAAK,EAAE;QACdjB,eAAe,CAACe,IAAI,CAACG,OAAO,CAAC;MAC/B,CAAC,MAAM;QACLhB,YAAY,CAAC,IAAI,CAAC;MACpB;IACF,CAAC,CAAC,OAAOiB,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;MAC9B;IACF;EACF,CAAC;EAED,oBACEvB,OAAA;IAAKyB,SAAS,EAAC,eAAe;IAAAC,QAAA,gBAC5B1B,OAAA,CAACF,WAAW;MAAC6B,MAAM,EAAExB,YAAa;MAACE,SAAS,EAAEA;IAAU;MAAAuB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC3D/B,OAAA,CAACH,OAAO;MAACmC,QAAQ,EAAEzB;IAAa;MAAAqB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAChC,CAAC;AAEV,CAAC;AAAC7B,EAAA,CApCID,GAAa;AAAAgC,EAAA,GAAbhC,GAAa;AAsCnB,eAAeA,GAAG;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}